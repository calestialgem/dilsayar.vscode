{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Dilsayar",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#output" },
		{ "include": "#start" },
		{ "include": "#skip" },
		{ "include": "#rule" }
	],
	"repository": {
		"comments": {
			"name": "comment.line.double-slash.dilsayar",
			"begin": "//",
			"end": "$"
		},
		"output": {
			"begin": "#output\\b",
			"end": ";",
			"beginCaptures": {
				"0": { "name": "keyword.control.dilsayar" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.terminator.statement.dilsayar" }
			},
			"patterns": [{ "include": "#string" }]
		},
		"start": {
			"begin": "#start\\b",
			"end": ";",
			"beginCaptures": {
				"0": { "name": "keyword.control.dilsayar" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.terminator.statement.dilsayar" }
			},
			"patterns": [{ "include": "#pattern" }]
		},
		"skip": {
			"begin": "#skip\\b",
			"end": ";",
			"beginCaptures": {
				"0": { "name": "keyword.control.dilsayar" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.terminator.statement.dilsayar" }
			},
			"patterns": [{ "include": "#pattern" }]
		},
		"rule": {
			"begin": "([a-zA-Z][a-zA-Z0-9_]*)([\\r\\n\\t ]*)(=)",
			"end": ";",
			"beginCaptures": {
				"1": { "name": "entity.name.type.dilsayar" },
				"3": { "name": "keyword.operator.assignment.dilsayar" }
			},
			"endCaptures": {
				"0": { "name": "punctuation.terminator.statement.dilsayar" }
			},
			"patterns": [{ "include": "#pattern" }]
		},
		"pattern": {
			"patterns": [
				{ "include": "#alternative" },
				{ "include": "#repeat" },
				{ "include": "#group" },
				{ "include": "#identifier" },
				{ "include": "#wildcard" },
				{ "include": "#string" },
				{ "include": "#range" },
				{ "include": "#character" }
			]
		},
		"alternative": {
			"name": "keyword.operator.dilsayar",
			"match": "\\?|\\+|\\*|\\|"
		},
		"repeat": {
			"name": "constant.numeric",
			"match": "[1-9][0-9]*"
		},
		"group": {
			"patterns": [
				{
					"name": "punctuation.section.parens.begin.bracket.round.dilsayar",
					"match": "\\("
				},
				{
					"name": "punctuation.section.parens.end.bracket.round.dilsayar",
					"match": "\\)"
				}
			]
		},
		"identifier": {
			"name": "variable.name.dilsayar",
			"match": "[a-zA-Z][a-zA-Z0-9_]*"
		},
		"wildcard": {
			"name": "keyword.operator.dilsayar",
			"match": "\\."
		},
		"string": {
			"name": "string.quoted.double.dilsayar",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"include": "#escape"
				}
			]
		},
		"range": {
			"name": "string.quoted.other.dilsayar",
			"begin": "\\[",
			"end": "\\]",
			"patterns": [
				{
					"include": "#escape"
				},
				{ "name": "keyword.operator.dilsayar", "match": "~" }
			]
		},
		"character": {
			"name": "string.quoted.single.dilsayar",
			"begin": "'",
			"end": "'",
			"patterns": [
				{
					"include": "#escape"
				}
			]
		},
		"escape": {
			"name": "constant.character.escape.dilsayar",
			"match": "\\\\([0-9a-fA-F]{2}|.)"
		}
	},
	"scopeName": "source.dilsayar"
}
