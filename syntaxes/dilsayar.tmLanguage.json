{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Dilsayar",
  "patterns": [
    { "include": "#comments" },
    { "include": "#skip" },
    { "include": "#start" },
    { "include": "#rule" }
  ],
  "repository": {
    "comments": {
      "name": "comment.line.double-slash.dilsayar",
      "begin": "//",
      "end": "$"
    },
    "skip": {
      "begin": "skip\\b",
      "end": ";",
      "beginCaptures": {
        "0": { "name": "keyword.control.dilsayar" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.terminator.statement.dilsayar" }
      },
      "patterns": [{ "include": "#pattern" }]
    },
    "start": {
      "begin": "start\\b",
      "end": ";",
      "beginCaptures": {
        "0": { "name": "keyword.control.dilsayar" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.terminator.statement.dilsayar" }
      },
      "patterns": [{ "include": "#pattern" }]
    },
    "rule": {
      "begin": "([A-Z][a-zA-Z]*)([\\r\\n\\t ]*)(=)",
      "end": ";",
      "beginCaptures": {
        "1": { "name": "variable.other.constant.dilsayar" },
        "3": { "name": "keyword.operator.assignment.dilsayar" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.terminator.statement.dilsayar" }
      },
      "patterns": [{ "include": "#pattern" }]
    },
    "pattern": {
      "patterns": [
        { "include": "#operators" },
        { "include": "#fixed_times" },
        { "include": "#group" },
        { "include": "#identifier" },
        { "include": "#string" },
        { "include": "#notset" },
        { "include": "#set" }
      ]
    },
    "operators": {
      "name": "keyword.operator.dilsayar",
      "match": "\\?|\\+|\\*|\\|"
    },
    "fixed_times": {
      "name": "constant.numeric",
      "match": "[1-9][0-9]*"
    },
    "group": {
      "patterns": [
        {
          "name": "punctuation.section.parens.begin.bracket.round.dilsayar",
          "match": "\\("
        },
        {
          "name": "punctuation.section.parens.end.bracket.round.dilsayar",
          "match": "\\)"
        }
      ]
    },
    "identifier": {
      "name": "entity.name.function.dilsayar",
      "match": "[A-Z][a-zA-Z]*"
    },
    "string": {
      "name": "string.quoted.double.dilsayar",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.dilsayar",
          "match": "\\\\([0-9a-fA-F]{2}|[tn\\\\\"])"
        }
      ]
    },
    "notset": {
      "name": "string.quoted.other.dilsayar",
      "begin": "\\!'",
      "end": "'",
      "patterns": [
        {
          "include": "#escape"
        },
        { "name": "constant.character.escape.dilsayar", "match": "~" }
      ]
    },
    "set": {
      "name": "string.quoted.other.dilsayar",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "include": "#escape"
        },
        { "name": "constant.character.escape.dilsayar", "match": "~" }
      ]
    },
    "escape": {
      "name": "constant.character.escape.dilsayar",
      "match": "\\\\([0-9a-fA-F]{2}|[tn\\\\'~])"
    }
  },
  "scopeName": "source.dilsayar"
}
